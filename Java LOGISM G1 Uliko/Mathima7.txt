Math class:
H Math class είναι μία built-in class η οποία περιέχει μαθηματικές συναρτήσεις τις οποίες μπορούμε να χρησιμοποιήσουμε. Μεταξύ άλλων, υπάρχουν οι ακόλουθες συναρτήσεις:
abs(x)   ---> απόλυτη τιμή του x
ceil(x) ---> στρογγυλοποίηση του x στον κοντινότερο μεγαλύτερο ακέραιο
cos(x) --> συνημίτονο της γωνίας x (σε μοίρες)
exp(x) --> δύναμη του e στην x.
floor(x) ---> στρογγυλοποίηση του x στον κοντινότερο μικρότερο ακέραιο
log(x) ---> ο λογάριθμος του x με βάση το e
max(x,y) --> η μεγαλύτερη αξία μεταξύ x και y
min(x,y) --> η μικρότερη αξία μεταξύ x και y
pow(x,y) ---> η δύναμη του x υψωμένου στο y
sin(x) --> ημίτονο της γωνίας x (σε μοίρες)
sqrt(x) ---> Τετραγωνική ρίζα του x
tan(x) --> εφαπτομένη της γωνίας x (σε μοίρες)
PI --> Σταθερά, η τιμή του Π του κύκλου
Ε --> Σταθερά, η τιμή του Euler, e

Constants (Σταθερές)
Μία σταθερά, στην Java την ορίζουμε σαν final. Μία σταθερά μπορεί να είναι static, δηλαδή να ανήκει στην class ή όχι. 

Static Methods
Όπως υπάρχουν οι static variables, έτσι υπάρχουν και οι static methods. Static method είναι και η main method της κυρίως class του προγράμματός μας. Η main class μας, δεν δημιουργεί objects η ίδια, και έτσι, οι methods (static) και οι μεταβλητές (static) δημιουργούνται από τον compiler. 


Enumerations 
Οι enumerations είναι σύνολα από σταθερές όπως ακριβώς και στην C++ (ανατρέξτε εκεί στην θεωρία)

Scope of variables
To scope είναι ακριβώς ίδιο με την C++ (μία μεταβλητη υπάρχει μεταξύ δύο αγκίστρων, έξω από αυτά καταστρέφεται.)

Method Overloading
Όταν έχουμε methods με το ίδιο όνομα μέσα στην ίδια class αν έχουν διαφορετικές παραμέτρους (σε επίπεδο ποσότητας παραμέτρων, τύπων, και σειράς παραμέτρων) αυτό ονομάζεται method overloading. Όταν μία τέτοια method καλείται, ο compiler επιλέγει την αντίστοιχη method εξετάζοντας τον αριθμό και τον τύπο των παραμέτρων.
Σημείωση: Καθώς ο constructor μίας class είναι method, τότε μπορούμε σε αυτόν να εφαρμόσουμε το method overloading, κάνοντας πρακτικά constructor overloading.

Arrays:
Οι πίνακες είναι σύνολα από ομοειδείς (νοηματικά) μεταβλητές (που ονομάζονται στοιχεία (elements ή components) οι οποίες περιέχουν αξίες του ίδιου τύπου. Οι πίνακες στην Java, ΑΝΤΙΘΕΤΑ από την C και την C++, είναι ΑΝΤΙΚΕΙΜΕΝΑ, και έτσι θεωρούνται reference types. Άρα,αυτό που χρησιμοποιούμε σαν πίνακα, είναι μία αναφορά (reference) σε ένα array object. Τα στοιχεία ενός πίνακα είναι είτε primitive types, είτε reference types (δηλαδή άλλα αντικείμενα, που θα μπορούσαν και τα ίδια να είναι πίνακες). Για να αναφέρουμε ένα στοιχείο σε έναν array, το κάνουμε ορίζοντας το όνομα (reference) του array, μαζί με την θέση του στοιχείου στον πίνακα. Η θέση του στοιχείου ονομάζεται σαν index του στοιχείου, ή subscript. Η αναφορά σε ένα στοιχείο όπως και στην C και στην C++ γίνεται με τον subscript operator ([])

Όπως και στην C++, οι πίνακες ξεκινούν από το στοιχείο 0, και ο δείκτης (index) πρέπει να είναι ένας θετικός ακέραιος αριθμός. 
Η δημιουργία ενός array γίνεται όπως και η δημιουργία ενός αντικειμένου, με την δριαφορά πως χρησιμοποιούμε τα subscript operators, κατά την διάρκεια της δημιουργίας του reference, και το μέγεθος του πίνακα, στην αρχικοποίηση του object. 
int[] myArray = new int[10];

Εναλλακτικά, μπορούμε να χρησιμοποιήσουμε ένα Array initializer, ο οποίος δίνει το μέγεθος του πίνακα σύμφωνα με το σύνολο των τιμών που δίνουμε κατά την δημιουργία του πίνακα.

int[] n = {10,20,30,40,50};

Στο συγκεκριμένο παράδειγμα, δημιουργούμε ένα πίνακα με πέντε θέσεις, και τα στοιχεία του έχουν τις αξίες n[0] = 10, n[1] = 20, n[2] = 30, n[3] = 40, n[4] = 50.